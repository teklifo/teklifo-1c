#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Менеджер = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоНовый() Тогда
		ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ПустаяСсылка();
		ДокументИзменен = Ложь;
	Иначе
		ТекущийСтатус = TK_ОбщегоНазначенияВызовСервера.СтатусПубликацииЗапросаЦенПоставщикам(Ссылка);
		ДокументИзменен = ОбменДаннымиСобытия.ДанныеРазличаются(ЭтотОбъект, Ссылка.ПолучитьОбъект(), ,
			"Комментарий, Менеджер");
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ТекущийСтатус", ТекущийСтатус);
	ДополнительныеСвойства.Вставить("ДокументИзменен", ДокументИзменен);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ПустаяСсылка();
	ДокументИзменен = Ложь;

	ДополнительныеСвойства.Свойство("ТекущийСтатус", ТекущийСтатус);
	ДополнительныеСвойства.Свойство("ДокументИзменен", ДокументИзменен);

	Если Не ЗначениеЗаполнено(ТекущийСтатус) Тогда
		TK_ОбщегоНазначенияВызовСервера.УстановитьСтатусПубликацииЗаказаЦенПоставщикам(Ссылка,
			Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.НеОпубликован);
	ИначеЕсли ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.Опубликован И ДокументИзменен Тогда
		TK_ОбщегоНазначенияВызовСервера.УстановитьСтатусПубликацииЗаказаЦенПоставщикам(Ссылка,
			Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ТребуетсяОбновление);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли