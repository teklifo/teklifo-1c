#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыДляЗаписи Экспорт;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // СтандартныеПодсистемы.ПодключаемыеКоманды 
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект); 
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

	УстановитьОтборПоДоступнымОрганизациям();

	ОтобразитьВнешнююСсылкуНаОпубликованныйДокумент();

	ОтобразитьТекущийСтатусПубликацииДокумета();

    СписокКоммерческихПредложенийПоЗапросу.Параметры.УстановитьЗначениеПараметра("ЗапросЦен",Объект.Ссылка );

    УстановитьУсловноеОформление();

    Элементы.ГруппаКоммерческиеПредложения.Видимость = ЗначениеЗаполнено(Объект.Ссылка);

КонецПроцедуры



&НаСервере
Процедура УстановитьУсловноеОформление()
	СписокКоммерческихПредложенийПоЗапросу.УсловноеОформление.Элементы.Очистить();
	
	Элемент = СписокКоммерческихПредложенийПоЗапросу.УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Актуальное");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Серый);
	Элемент.Использование = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьПозицииКЗаказу(Команда)
	ОткрытьФорму("Документ.TK_ЗапросЦенПоставщикам.Форма.ФормаВыбораПозицийПоЗаказу",Новый Структура("Ссылка",Объект.Ссылка));
КонецПроцедуры
	




&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды 
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект); 
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды 
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект); 
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 	

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "TK_ОбновлениеСтатусаПубликации" И Параметр = Объект.Ссылка Тогда
		ОтобразитьВнешнююСсылкуНаОпубликованныйДокумент();
		ОтобразитьТекущийСтатусПубликацииДокумета();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьКорректностьЗаполненияEmail(Отказ);
	
	Если ПодтвержденоИзменениеОпубликованногоДокумента Тогда
		Возврат;
	КонецЕсли;

	ПроверитьИзменениеОпубликованногоДокумента(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьКорректностьЗаполненияEmail(Отказ)
	Если ОбщегоНазначенияУТКлиентСервер.ПроверитьЗаполнениеПочтовогоАдреса(объект.Email) Тогда
		ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(НСтр(
			"ru = 'Неверный формат адреса электронной почты'"), Ложь,
			"Email");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПодтвержденоИзменениеОпубликованногоДокумента = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ОтобразитьТекущийСтатусПубликацииДокумета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	ПринудительноЗакрытьФорму = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВнешняяСсылкаНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ЗапуститьПриложение(ВнешняяСсылка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	Если НоваяСтрока Или Копирование Тогда
		ТекущиеДанные.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	ЗаполнитьНоменклатуруТекстомВСтрокеТабличнойЧасти(Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор());

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СкопироватьСсылкуВБуфер(Команда)

	TK_ОбщегоНазначенияКлиент.СкопироватьТекстВБуферОбмена(Элементы.БуферОбмена, ВнешняяСсылка);

	ТекстСообщения = НСтр("ru = 'Внешняя ссылка на запрос цен скопирована в буфер обмена.'");
	ПоказатьОповещениеПользователя( , , ТекстСообщения, БиблиотекаКартинок.Успешно32);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)

	ОбщегоНазначенияУТКлиент.Записать(ЭтотОбъект, , Новый ОписаниеОповещения("ОтправитьДокументНаПубликацию",
		ЭтотОбъект));

КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)

	ОбщегоНазначенияУТКлиент.Провести(ЭтотОбъект, , Новый ОписаниеОповещения("ОтправитьДокументНаПубликацию",
		ЭтотОбъект));

КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)

	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтотОбъект, , Новый ОписаниеОповещения("ОтправитьДокументНаПубликацию",
		ЭтотОбъект));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ОбработатьЗаписьОбъекта()

	ОбщегоНазначенияУТКлиент.ОбработатьЗаписьОбъектаВФорме(ЭтотОбъект, ПараметрыДляЗаписи);

КонецПроцедуры

&НаСервере
Процедура ОтобразитьВнешнююСсылкуНаОпубликованныйДокумент()

	ВнешняяСсылка = TK_ОбщегоНазначенияВызовСервера.ВнешняяСсылкаНаОпубликованныйЗапросЦенПоставщикам(
		Объект.Ссылка);

	Элементы.ГруппаСтраницыВнешнейСсылки.Видимость = ЗначениеЗаполнено(ВнешняяСсылка);

КонецПроцедуры

&НаСервере
Процедура ОтобразитьТекущийСтатусПубликацииДокумета()

	СтатусПубликации = TK_ОбщегоНазначенияВызовСервера.СтатусПубликацииЗапросаЦенПоставщикам(Объект.Ссылка);

	Если Не ЗначениеЗаполнено(СтатусПубликации) Тогда
		СтатусПубликации = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.НеОпубликован;
	КонецЕсли;
	
	Если СтатусПубликации = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.Опубликован Тогда
		Элементы.ДекорацияОповещение.Заголовок = НСтр("ru = 'Запрос цен поставщикам опубликован.'");
		Элементы.ДекорацияОповещение.ЦветТекста = ЦветаСтиля.ЦветАкцента;
	ИначеЕсли СтатусПубликации = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ТребуетсяОбновление Тогда
		Элементы.ДекорацияОповещение.Заголовок = НСтр(
			"ru = 'Запрос цен был изменен с момента последней публикации. Рекомендуется выполнить повторную публикацию документа.'");
		Элементы.ДекорацияОповещение.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	Иначе
		Элементы.ДекорацияОповещение.Заголовок = НСтр(
			"ru = 'Подготовьте запрос цен у поставщиков, после чего нажмите на кнопку ""Опубликовать"".'");
		Элементы.ДекорацияОповещение.ЦветТекста = ЦветаСтиля.ЦветТекстаКнопки;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоДоступнымОрганизациям()

	МассивОрганизаций = TK_ОбщегоНазначенияВызовСервера.организацииДоступныеКОбменуСTeklifo();

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивОрганизаций)));

	НовыйПараметр = Новый ФиксированныйМассив(МассивПараметров);

	Элементы.Организация.ПараметрыВыбора = НовыйПараметр;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруТекстомВСтрокеТабличнойЧасти(ИдентификаторСтроки)

	СтрокаТабличнойЧасти = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
	СтрокаТабличнойЧасти.НоменклатураТекстом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		СтрокаТабличнойЧасти.Номенклатура, "НаименованиеПолное");

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИзменениеОпубликованногоДокумента(Отказ, ПараметрыЗаписи)

	Если СтатусПубликации = ПредопределенноеЗначение("Перечисление.TK_СтатусыПубликацииДокументовНаTeklifo.Опубликован")
		И ОбъектИзменен() Тогда

		Отказ = Истина;

		ПоказатьВопрос(Новый ОписаниеОповещения("ПодтверждениеИзмененийВОпубликованныйДокумент", ЭтотОбъект,
			ПараметрыЗаписи), НСтр(
			"ru = 'Запрос цен у поставщиков уже был опубликован прежде, поэтому после внесенных изменений его нужно будет опубликовать заново. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбъектИзменен()

	ЗначениеОбъекта = РеквизитФормыВЗначение("Объект");

	Возврат TK_ОбщегоНазначенияВызовСервера.ЗапросЦенПоставщикамИзменен(ЗначениеОбъекта);

КонецФункции

&НаКлиенте
Процедура ПодтверждениеИзмененийВОпубликованныйДокумент(Результат, ПараметрыЗаписи) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ПодтвержденоИзменениеОпубликованногоДокумента = Истина;

	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда

		ОбщегоНазначенияУТКлиент.Записать(ЭтотОбъект, , Новый ОписаниеОповещения("ОтправитьДокументНаПубликацию",
			ЭтотОбъект));

	ИначеЕсли ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда

		ОбщегоНазначенияУТКлиент.Провести(ЭтотОбъект, , Новый ОписаниеОповещения("ОтправитьДокументНаПубликацию",
			ЭтотОбъект));

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьДокументНаПубликацию(Результат, ДополнительныеПараметры) Экспорт

	Если Не Результат Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Проведен И СтатусПубликации <> ПредопределенноеЗначение(
		"Перечисление.TK_СтатусыПубликацииДокументовНаTeklifo.Опубликован") Тогда
		TK_ИнтеграцияСTeklifoКлиент.ОпубликоватьЗапросЦенПоставщикамНаTeklifo(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры
&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	МенеджерПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура МенеджерПриИзмененииНаСервере()
	ЗначениеОбъекта = РеквизитФормыВЗначение("Объект");
	ЗначениеОбъекта.ЗаполнитьИмяКонтактногоЛица();
	ЗначениеВРеквизитФормы(ЗначениеОбъекта,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ЗначениеОбъекта = РеквизитФормыВЗначение("Объект");
	ЗначениеОбъекта.ЗаполнитьКонтактныеДанные();
	ЗначениеВРеквизитФормы(ЗначениеОбъекта,"Объект");
КонецПроцедуры


#КонецОбласти