#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет коммерческое предложение на основании данных запроса цен от клиента.
Процедура ЗаполнитьНаОснованииЗапросаЦенОтКлиента() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_ЗапросЦенОтКлиента.Организация КАК Организация,
						  |	TK_ЗапросЦенОтКлиента.Партнер КАК Партнер,
						  |	TK_ЗапросЦенОтКлиента.Контрагент КАК Контрагент,
						  |	TK_ЗапросЦенОтКлиента.Валюта КАК Валюта,
						  |	TK_ЗапросЦенОтКлиента.Товары.(
						  |		ИдентификаторСтроки КАК ИдентификаторСтрокиЗапроса,
						  |		ИдентификаторВерсии КАК ИдентификаторВерсииСтрокиЗапроса,
						  |		Номенклатура,
						  |		НоменклатураТекстом,
						  |		Количество КАК ЗапрошенноеКоличество,
						  |		МаксимальнаяЦена КАК ЗапрошеннаяЦена,
						  |		ДатаДоставки КАК ЗапрошеннаяДатаДоставки,
						  |		Комментарий КАК КомментарийЗапроса) КАК Товары
						  |ИЗ
						  |	Документ.TK_ЗапросЦенОтКлиента КАК TK_ЗапросЦенОтКлиента
						  |ГДЕ
						  |	TK_ЗапросЦенОтКлиента.Ссылка = &ЗапросЦенОтКлиента");
	Запрос.УстановитьПараметр("ЗапросЦенОтКлиента", ЗапросЦенОтКлиента);

	ВыборкаШапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Если ВыборкаШапка.Следующий() Тогда

		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);

		Товары.Очистить();
		ВыборкаТовары = ВыборкаШапка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			СтрокаТабличнойЧасти = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаТовары);
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Менеджер = Пользователи.ТекущийПользователь();

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.TK_ЗапросЦенОтКлиента") Тогда

		ЗапросЦенОтКлиента = ДанныеЗаполнения;
		ЗаполнитьНаОснованииЗапросаЦенОтКлиента();

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого СтрокаТабличнойЧасти Из Товары Цикл

		Если СтрокаТабличнойЧасти.Пропустить Тогда
			Продолжить;
		КонецЕсли;

		ИндексСтроки = СтрокаТабличнойЧасти.НомерСтроки - 1;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("Количество", НСтр("ru = 'Количество'"), ИндексСтроки);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("Цена", НСтр("ru = 'Цена'"), ИндексСтроки);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("Сумма", НСтр("ru = 'Сумма'"), ИндексСтроки);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("СтавкаНДС", НСтр("ru = 'СтавкаНДС'"), ИндексСтроки);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("СуммаСНДС", НСтр("ru = 'СуммаСНДС'"), ИндексСтроки);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
			СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти("ДатаДоставки", НСтр("ru = 'ДатаДоставки'"), ИндексСтроки);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ПустаяСсылка();
		ДокументИзменен = Ложь;
	Иначе
		ТекущийСтатус = TK_ОбщегоНазначенияВызовСервера.СтатусПубликацииЗапросаЦенПоставщикам(Ссылка);
		ДокументИзменен = ОбменДаннымиСобытия.ДанныеРазличаются(ЭтотОбъект, Ссылка.ПолучитьОбъект(), ,
			"Комментарий, Менеджер");
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ТекущийСтатус", ТекущийСтатус);
	ДополнительныеСвойства.Вставить("ДокументИзменен", ДокументИзменен);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ПустаяСсылка();
	ДокументИзменен = Ложь;

	ДополнительныеСвойства.Свойство("ТекущийСтатус", ТекущийСтатус);
	ДополнительныеСвойства.Свойство("ДокументИзменен", ДокументИзменен);

	Если Не ЗначениеЗаполнено(ТекущийСтатус) Тогда
		TK_ОбщегоНазначенияВызовСервера.УстановитьСтатусПубликацииКоммерческогоПредложенияКлиенту(Ссылка,
			Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.НеОпубликован);
	ИначеЕсли ТекущийСтатус = Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.Опубликован И ДокументИзменен Тогда
		TK_ОбщегоНазначенияВызовСервера.УстановитьСтатусПубликацииКоммерческогоПредложенияКлиенту(Ссылка,
			Перечисления.TK_СтатусыПубликацииДокументовНаTeklifo.ТребуетсяОбновление);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

Процедура СообщитьОбОшибкеЗаполненияСтрокиТабличнойЧасти(ИмяПоля, ПредставлениеПоля, ИндексСтроки)

	ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Поле ""%1"" не заполнено.'"), ПредставлениеПоля), ,
		СтрШаблон("Товары[%1].%2", ИндексСтроки, ИмяПоля), "Объект");

КонецПроцедуры

#КонецЕсли