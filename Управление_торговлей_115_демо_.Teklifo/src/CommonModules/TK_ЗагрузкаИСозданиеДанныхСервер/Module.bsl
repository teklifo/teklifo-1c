#Область ПрограммныйИнтерфейс

// Загрузить документ запрос цен от клиента.
// 
// Параметры:
//  ДанныеЗагрузки - Структура - Данные загрузки
//  Организация - СправочникСсылка.Организации - Организация
// 
// Возвращаемое значение:
//  Структура - Загрузить документ запрос цен от клиента:
// * ДокЗапроса - ДокументСсылка.TK_ЗапросЦенОтКлиента 
// * id - Строка
// * НомерДокумента - Строка
// * ЭтоАктуальнаяВерсия - Булево 
// * ИдентификаторВерсии - Строка
Функция ЗагрузитьДокументЗапросЦенОтКлиента(ДанныеЗагрузки, Организация) Экспорт

	ДанныеНайденногоДокумента = TK_ОбщегоНазначенияВызовСервера.ПолучитьДанныеДокументаЗапросаЦенОтКлиентаПоВнешнемуID(
		ДанныеЗагрузки.versionId);

	ДокументЗапросЦен = ДанныеНайденногоДокумента.Документ;

	Если Не ЗначениеЗаполнено(ДокументЗапросЦен) Тогда
		ДокументЗапросЦенОбъект = Документы.TK_ЗапросЦенОтКлиента.СоздатьДокумент();
	Иначе
		ДокументЗапросЦенОбъект = ДокументЗапросЦен.ПолучитьОбъект();
	КонецЕсли;

	ДокументЗапросЦенОбъект.Дата = ДанныеЗагрузки.createdAt;
	ДокументЗапросЦенОбъект.Организация = Организация;
	ДокументЗапросЦенОбъект.Валюта      = Справочники.Валюты.НайтиПоНаименованию(ДанныеЗагрузки.currency, Истина);
	Если ДанныеЗагрузки.privateRequest Тогда
		ДокументЗапросЦенОбъект.ТипЗапроса = Перечисления.TK_ТипыЗапросовЦен.Закрытый;
	Иначе
		ДокументЗапросЦенОбъект.ТипЗапроса = Перечисления.TK_ТипыЗапросовЦен.Открытый;
	КонецЕсли;

	ДокументЗапросЦенОбъект.НачальнаяДатаСбораПредложений = ДанныеЗагрузки.startDate;
	ДокументЗапросЦенОбъект.КонечнаяДатаСбораПредложений  = ДанныеЗагрузки.endDate;
	ДокументЗапросЦенОбъект.ТекстовоеОписание             = ДанныеЗагрузки.description;
	ДокументЗапросЦенОбъект.АдресДоставки                 = ДанныеЗагрузки.deliveryAddress;
	ДокументЗапросЦенОбъект.КомментарийКУсловиямДоставки  = ДанныеЗагрузки.deliveryTerms;
	ДокументЗапросЦенОбъект.КомментарийКУсловиямОплаты    = ДанныеЗагрузки.paymentTerms;

	ДокументЗапросЦенОбъект.Партнер = ПолучитьПартнера(ДанныеЗагрузки.company, Ложь, Истина);

	ДокументЗапросЦенОбъект.Товары.Очистить();

	Для Каждого ДанныеПозиции Из ДанныеЗагрузки.items Цикл

		Номенклатура = ПолучитьНоменклатуруКонтрагента(ДанныеПозиции, ДокументЗапросЦенОбъект.Партнер);

		Если ЗначениеЗаполнено(Номенклатура) Тогда
			СтрокаТЧ = ДокументЗапросЦенОбъект.Товары.Добавить();
			СтрокаТЧ.Номенклатура = Номенклатура;
			СтрокаТЧ.Количество = ДанныеПозиции.quantity;
			СтрокаТЧ.МаксимальнаяЦена = ДанныеПозиции.price;
			СтрокаТЧ.ДатаДоставки = ДанныеПозиции.deliveryDate;
			СтрокаТЧ.Комментарий  = ДанныеПозиции.comment;
		КонецЕсли;

	КонецЦикла;

	ДокументЗапросЦенОбъект.Записать(РежимЗаписиДокумента.Проведение);

	ИдентификаторЗапросаЦен = ДанныеЗагрузки.id; // Строка
	НомерЗапросаЦен = ДанныеЗагрузки.НомерДокумента; // Строка
	ЭтоАктуальнаяВерсия = ДанныеЗагрузки.ЭтоАктуальнаяВерсия; // Булево
	ИдентификаторВерсииЗапросаЦен = ДанныеЗагрузки.ИдентификаторВерсии; // Строка

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ДокЗапроса", ДокументЗапросЦенОбъект.Ссылка);
	СтруктураОтвета.Вставить("id", ИдентификаторЗапросаЦен);
	СтруктураОтвета.Вставить("НомерДокумента", НомерЗапросаЦен);
	СтруктураОтвета.Вставить("ЭтоАктуальнаяВерсия", ЭтоАктуальнаяВерсия);
	СтруктураОтвета.Вставить("ИдентификаторВерсии", ИдентификаторВерсииЗапросаЦен);

	Возврат СтруктураОтвета;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНоменклатуруКонтрагента(ДанныеПозиции, Владелец)

	Номенклатура = Справочники.НоменклатураКонтрагентов.НайтиПоРеквизиту("Идентификатор", СокрЛП(
		ДанныеПозиции.product.externalId));

	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Номенклатура;
	КонецЕсли;

	НоменклатураОбъект = Справочники.НоменклатураКонтрагентов.СоздатьЭлемент();
	НоменклатураОбъект.Наименование = СокрЛП(ДанныеПозиции.product.name);
	НоменклатураОбъект.НаименованиеПолное = СокрЛП(ДанныеПозиции.product.name);
	НоменклатураОбъект.Идентификатор = СокрЛП(ДанныеПозиции.product.externalId);
	НоменклатураОбъект.Артикул = СокрЛП(ДанныеПозиции.product.number);
	НоменклатураОбъект.ВладелецНоменклатуры = Владелец;
	НоменклатураОбъект.Владелец = Владелец;
	НоменклатураОбъект.НаименованиеУпаковки = СокрЛП(ДанныеПозиции.product.unit);
	НоменклатураОбъект.НаименованиеБазовойЕдиницыИзмерения = СокрЛП(ДанныеПозиции.product.unit);

	НоменклатураОбъект.Записать();

	Возврат НоменклатураОбъект.Ссылка;

КонецФункции

Функция ПолучитьПартнера(ДанныеОрганизацииПартнера, ЭтоПоставщик = Ложь, ЭтоКлиент = Ложь)

	СсылкаПартнера = Справочники.Партнеры.НайтиПоРеквизиту("TK_IdПартнера", СокрЛП(ДанныеОрганизацииПартнера.id));

	Если ЗначениеЗаполнено(СсылкаПартнера) Тогда
		Возврат СсылкаПартнера;
	КонецЕсли;

	ПартнерОбъект = Справочники.Партнеры.СоздатьЭлемент();
	ПартнерОбъект.Наименование = ДанныеОрганизацииПартнера.name;
	ПартнерОбъект.НаименованиеПолное = ДанныеОрганизацииПартнера.name;
	ПартнерОбъект.TK_IdПартнера = СокрЛП(ДанныеОрганизацииПартнера.id);
	ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
	ПартнерОбъект.Поставщик = ЭтоПоставщик;
	ПартнерОбъект.Клиент = ЭтоКлиент;
	ПартнерОбъект.Записать();
	СсылкаПартнера = ПартнерОбъект.Ссылка;

	КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	КонтрагентОбъект.Наименование = ДанныеОрганизацииПартнера.name;
	КонтрагентОбъект.НаименованиеПолное = ДанныеОрганизацииПартнера.name;
	КонтрагентОбъект.ИНН = ДанныеОрганизацииПартнера.tin;
	КонтрагентОбъект.Партнер = СсылкаПартнера;
	КонтрагентОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
	КонтрагентОбъект.Записать();

	Возврат СсылкаПартнера;

КонецФункции

#КонецОбласти