#Область ПрограммныйИнтерфейс

// Получить список доступных организаций.
// 
// Возвращаемое значение:
//  Массив Из СправочникСсылка.Организации - Получить список доступных организаций
Функция ПолучитьСписокДоступныхОрганизаций() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СоответствияОрганизаций.Организация
						  |ИЗ
						  |	РегистрСведений.TK_СоответствиеОрганизацийTeklifo КАК TK_СоответствияОрганизаций
						  |СГРУППИРОВАТЬ ПО
						  |	TK_СоответствияОрганизаций.Организация");

	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат.ВыгрузитьКолонку("Организация");

КонецФункции

// Возвращает URL публикации документа на сервисе Teklifo.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на документ
// 
// Возвращаемое значение:
//  Строка - URL публикации документа
Функция ВнешняяСсылкаНаОпубликованныйДокумент(Документ) Экспорт

	ДанныеПоДокументу = ПолучитьДанныеДокумента(Документ);

	ШаблонСсылки = ПолучитьШаблонСсылки();

	СсылкаДляЗапуска = СтрШаблон(ШаблонСсылки, ДанныеПоДокументу.ВнешнийID);

	Возврат СсылкаДляЗапуска;

КонецФункции

// Получить данные документа.
// 
// Параметры:
//  СсылкаНаЗаказ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на заказ
// 
// Возвращаемое значение:
//  Структура - Получить данные документа:
// * Идентификатор - Строка
// * НомерДокумент - Строка
Функция ПолучитьДанныеДокумента(СсылкаНаЗаказ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СоответствияДокументовЗапросаЦенПоставщикам.Идентификатор,
						  |	TK_СоответствияДокументовЗапросаЦенПоставщикам.НомерДокумент
						  |ИЗ
						  |	РегистрСведений.TK_ИдентификаторыДокументовНаTeklifo КАК TK_СоответствияДокументовЗапросаЦенПоставщикам
						  |ГДЕ
						  |	TK_СоответствияДокументовЗапросаЦенПоставщикам.Документ = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаЗаказ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	СтруктураДанных = Новый Структура("Идентификатор, НомерДокумент", "", "");
	Если Выборка.Количество() > 0 Тогда
		СтруктураДанных.Идентификатор = Выборка.Идентификатор;
		СтруктураДанных.НомерДокумент = Выборка.НомерДокумент;
	КонецЕсли;

	Возврат СтруктураДанных;

КонецФункции

// Получить данные документа запроса цен от клиента по внешнему ID.
// 
// Параметры:
//  ИдентификаторВерсииЗапросаКлиенту - Строка - Version id
// 
// Возвращаемое значение:
//  Структура - Получить данные документа запроса цен от клиента по внешнему ID:
// * Идентификатор - Строка
// * НомерДокумент - Строка
// * Документ - ДокументСсылка.TK_ЗапросЦенОтКлиента
Функция ПолучитьДанныеДокументаЗапросаЦенОтКлиентаПоВнешнемуID(ИдентификаторВерсииЗапросаКлиенту = "") Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.Идентификатор,
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.НомерДокумент,
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.Документ
						  |ИЗ
						  |	РегистрСведений.TK_СоответствияДокументовЗапросаЦенОтКлиентов КАК TK_СоответствияДокументовЗапросаЦенОтКлиентов
						  |ГДЕ
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.ИдентификаторВерсии = &ИдентификаторВерсии");
	Запрос.УстановитьПараметр("ИдентификаторВерсии", ИдентификаторВерсииЗапросаКлиенту);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	СтруктураДанных = Новый Структура("Идентификатор, НомерДокумент, Документ", "", "",
		Документы.TK_ЗапросЦенОтКлиента.ПустаяСсылка());
	Если Выборка.Количество() > 0 Тогда
		СтруктураДанных.Идентификатор = Выборка.Идентификатор;
		СтруктураДанных.НомерДокумент = Выборка.НомерДокумент;
		СтруктураДанных.Документ = Выборка.Документ;
	КонецЕсли;

	Возврат СтруктураДанных;

КонецФункции

// Возвращает актуальный статус публикации документа на Teklifo.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на заказ
// 
// Возвращаемое значение:
// 	ПеречислениеСсылка.TK_СтатусыПубликацииЗапросовЦен 
Функция СтатусПубликацииДокумента(Документ) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СтатусыДокументовИнтеграцииСрезПоследних.Статус
						  |ИЗ
						  |	РегистрСведений.TK_СтатусыПубликацииДокументовНаTeklifo.СрезПоследних(, Документ = &СсылкаНаДокумент) КАК
						  |		TK_СтатусыДокументовИнтеграцииСрезПоследних");
	Запрос.УстановитьПараметр("СсылкаНаДокумент", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Статус;

КонецФункции

// Устанавливает статус публикации запроса цен поставщикам.
// 
// Параметры:
//  СсылкаНаЗаказ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на заказ
//  Статус - ПеречислениеСсылка.TK_СтатусыПубликацииЗапросовЦен - Статус
Процедура УстановитьСтатусПубликацииЗаказаЦенПоставщикам(СсылкаНаЗаказ, Статус) Экспорт

	МенеджерЗаписи = РегистрыСведений.TK_СтатусыПубликацииДокументовНаTeklifo.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	МенеджерЗаписи.Документ = СсылкаНаЗаказ;
	МенеджерЗаписи.Статус = Статус;
	МенеджерЗаписи.Записать();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьШаблонСсылки()
	Возврат "https://teklifo.com/rfq/%1";
КонецФункции

#КонецОбласти