#Область ПрограммныйИнтерфейс

// Возвращает список организаций для которых настроена интеграция с Teklifo.
// 
// Возвращаемое значение:
//  Массив Из СправочникСсылка.Организации - доступные для интеграции организации
Функция ОрганизацииДоступныеКОбменуСTeklifo() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СоответствияОрганизаций.Организация
						  |ИЗ
						  |	РегистрСведений.TK_СоответствиеОрганизацийTeklifo КАК TK_СоответствияОрганизаций
						  |СГРУППИРОВАТЬ ПО
						  |	TK_СоответствияОрганизаций.Организация");

	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат.ВыгрузитьКолонку("Организация");

КонецФункции

// Возвращает URL публикации документа на сервисе Teklifo.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на документ
// 
// Возвращаемое значение:
//  Строка - URL публикации документа
Функция ВнешняяСсылкаНаОпубликованныйДокумент(Документ) Экспорт

	ДанныеПубликации = ДанныеОпубликованногоЗапросаЦенПоставщикам(Документ);

	СсылкаДляЗапуска = "";

	Если ТипЗнч(Документ) = Тип("ДокументСсылка.TK_ЗапросЦенПоставщикам") И ЗначениеЗаполнено(
		ДанныеПубликации.Идентификатор) Тогда
		СсылкаДляЗапуска = СтрШаблон("https://teklifo.com/rfq/%1", ДанныеПубликации.Идентификатор);
	КонецЕсли;

	Возврат СсылкаДляЗапуска;

КонецФункции

// Возвращает данные опубликованного запроса цен поставщикам.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на запрос цен поставщикам
// 
// Возвращаемое значение:
//  Структура - Получить данные документа:
// * Идентификатор - Строка
// * НомерДокумента - Строка
Функция ДанныеОпубликованногоЗапросаЦенПоставщикам(Документ) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	ИдентификаторыЗапросовЦен.Идентификатор,
						  |	ИдентификаторыЗапросовЦен.НомерДокумента
						  |ИЗ
						  |	РегистрСведений.TK_ИдентификаторыЗапросовЦенПоставщикамНаTeklifo КАК ИдентификаторыЗапросовЦен
						  |ГДЕ
						  |	ИдентификаторыЗапросовЦен.Документ = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	СтруктураДанных = Новый Структура("Идентификатор, НомерДокумента", "", "");
	Если Выборка.Количество() > 0 Тогда
		СтруктураДанных.Идентификатор = Выборка.Идентификатор;
		СтруктураДанных.НомерДокумента = Выборка.НомерДокумента;
	КонецЕсли;

	Возврат СтруктураДанных;

КонецФункции

// Возвращает данные опубликованного запроса цен от клиента по идентификатору версии.
// 
// Параметры:
//  ИдентификаторВерсии - Строка - идентификатор версии опубликованного документа
// 
// Возвращаемое значение:
//  ДокументСсылка.TK_ЗапросЦенОтКлиента
Функция ЗапросЦенОтКлиентаПоИдентификаторуВерсии(ИдентификаторВерсии) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.Документ
						  |ИЗ
						  |	РегистрСведений.TK_ИдентификаторыЗапросовЦенОтКлиентовНаTeklifo КАК TK_СоответствияДокументовЗапросаЦенОтКлиентов
						  |ГДЕ
						  |	TK_СоответствияДокументовЗапросаЦенОтКлиентов.ИдентификаторВерсии = &ИдентификаторВерсии");
	Запрос.УстановитьПараметр("ИдентификаторВерсии", ИдентификаторВерсии);
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		Возврат Выборка.Документ;
	КонецЕсли;

	Возврат Документы.TK_ЗапросЦенОтКлиента.ПустаяСсылка();

КонецФункции

// Возвращает актуальный статус публикации документа на Teklifo.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на заказ
// 
// Возвращаемое значение:
// 	ПеречислениеСсылка.TK_СтатусыПубликацииЗапросовЦен 
Функция СтатусПубликацииДокумента(Документ) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	TK_СтатусыДокументовИнтеграцииСрезПоследних.Статус
						  |ИЗ
						  |	РегистрСведений.TK_СтатусыПубликацииЗапросовЦенПоставщикамНаTeklifo.СрезПоследних(, Документ = &Документ) КАК
						  |		TK_СтатусыДокументовИнтеграцииСрезПоследних");
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		Возврат Выборка.Статус;
	Иначе
		Возврат Перечисления.TK_СтатусыПубликацииЗапросовЦен.НеОпубликован;
	КонецЕсли;

КонецФункции

// Устанавливает статус публикации запроса цен поставщикам.
// 
// Параметры:
//  Документ - ДокументСсылка.TK_ЗапросЦенПоставщикам - Ссылка на заказ
//  Статус - ПеречислениеСсылка.TK_СтатусыПубликацииЗапросовЦен - Статус
Процедура УстановитьСтатусПубликацииЗаказаЦенПоставщикам(Документ, Статус) Экспорт

	МенеджерЗаписи = РегистрыСведений.TK_СтатусыПубликацииЗапросовЦенПоставщикамНаTeklifo.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	МенеджерЗаписи.Документ = Документ;
	МенеджерЗаписи.Статус = Статус;
	МенеджерЗаписи.Записать();

КонецПроцедуры

#КонецОбласти