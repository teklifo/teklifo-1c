#Область ПрограммныйИнтерфейс

// Создать уведомление о новом коммеческом предложении от поставщика.
// 
// Параметры:
//  РеквизитыКоммерческогоПредложения - см. РеквизитыКоммерческогоПредложенияОтПоставщика
Процедура СоздатьУведомлениеОНовомКоммеческомПредложенииОтПоставщика(РеквизитыКоммерческогоПредложения) Экспорт

	ПараметрыУведомления = НоваяСтруктураПараметровУведомления();

	ПараметрыУведомления.Важность = 1;
	ПараметрыУведомления.Наименование = НСтр("ru = 'Получено новое коммерческое предложение!'");
	ПараметрыУведомления.Организация = РеквизитыКоммерческогоПредложения.Организация;
	ПараметрыУведомления.Предмет = РеквизитыКоммерческогоПредложения.Ссылка;
	ПараметрыУведомления.ТекстУведомления = ТекстУведомленияОНовомКоммерческомПредложении(
		РеквизитыКоммерческогоПредложения);

	СоздатьУведомление(ПараметрыУведомления);

КонецПроцедуры

// Создать уведомление.
// 
// Параметры:
//  ПараметрыУведомления - см. НоваяСтруктураПараметровУведомления
Процедура СоздатьУведомление(ПараметрыУведомления) Экспорт

	ОбъектУведомления = Справочники.TK_УведомленияИнтеграцииСTeklifo.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(ОбъектУведомления, ПараметрыУведомления, , "ТекстУведомления");

	ОбъектУведомления.ТекстУведомления = "<html><head></head><body>" + ПараметрыУведомления.ТекстУведомления
		+ "</body></html>";

	УстановитьПривилегированныйРежим(Истина);

	Попытка
		ОбъектУведомления.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Создание уведомления Teklifo", УровеньЖурналаРегистрации.Ошибка, , ,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

// Реквизиты коммерческого предложения от поставщика для создания уведомления.
// 
// Возвращаемое значение:
//  Структура:
// * Организация - СправочникСсылка.Организации - 
// * Ссылка - ДокументСсылка.TK_КоммерческоеПредложениеОтПоставщика 
// * ЗапросЦенПоставщикам - ДокументСсылка.TK_ЗапросЦенПоставщикам
// * Контрагент - СправочникСсылка.Контрагенты
Функция НоваяСтруктураРеквизитовКоммерческогоПредложенияОтПоставщика() Экспорт

	Структура = Новый Структура;

	Структура.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Структура.Вставить("Ссылка", Документы.TK_КоммерческоеПредложениеОтПоставщика.ПустаяСсылка());
	Структура.Вставить("ЗапросЦенПоставщикам", Документы.TK_ЗапросЦенПоставщикам.ПустаяСсылка());
	Структура.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());

	Возврат Структура;

КонецФункции

// Структура параметров уведомления.
// 
// Возвращаемое значение:
//  Структура:
// * Наименование - Строка 
// * Организация - СправочникСсылка.Организации 
// * Дата - Дата 
// * ТекстУведомления - Строка 
// * Предмет - Неопределено 
// * Важность - Число
Функция НоваяСтруктураПараметровУведомления() Экспорт

	Структура = Новый Структура;

	Структура.Вставить("Наименование", "");
	Структура.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Структура.Вставить("Дата", ТекущаяДатаСеанса());
	Структура.Вставить("ТекстУведомления", "");
	Структура.Вставить("Предмет", Неопределено);
	Структура.Вставить("Важность", 0);

	Возврат Структура;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстУведомленияОНовомКоммерческомПредложении(РеквизитыКоммерческогоПредложения)

	Текст = СтрШаблон(НСтр("ru = 'Получено новое коммерческое от поставщика ""%1"" на основании документа ""%2"".'"),
		РеквизитыКоммерческогоПредложения.Контрагент, РеквизитыКоммерческогоПредложения.ЗапросЦенПоставщикам);

	Возврат "<p>" + Текст + "</p>";

КонецФункции

#КонецОбласти