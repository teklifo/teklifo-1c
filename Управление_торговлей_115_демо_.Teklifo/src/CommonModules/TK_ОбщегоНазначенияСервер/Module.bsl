Функция ПолучитьСписокДоступныхОрганизаций() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	TK_СоответствияОрганизаций.Организация
	|ИЗ
	|	РегистрСведений.TK_СоответствияОрганизаций КАК TK_СоответствияОрганизаций
	|СГРУППИРОВАТЬ ПО
	|	TK_СоответствияОрганизаций.Организация");
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.ВыгрузитьКолонку("Организация");
	
КонецФункции



Функция ПолучитьНовыйИдентификатор() Экспорт
	Возврат Строка(Новый УникальныйИдентификатор());
КонецФункции



Функция ПолучитьВнешнююСсылкуНаДокументЗаказаЦенПоставщикам(СсылкаНаЗаказ) Экспорт
	НомерДокумента = ПолучитьДанныеДокумента(СсылкаНаЗаказ).number;
	
	СсылкаНаДокумент = "";
	Если ЗначениеЗаполнено(НомерДокумента) Тогда
		СсылкаНаДокумент = СтрШаблон(ПолучитьШаблонСсылки(),НомерДокумента);
	КонецЕсли;
	
	Возврат СсылкаНаДокумент;
КонецФункции


Функция ПолучитьСсылкуНаДокумент_ДляЗапуска(СсылкаНаЗаказ) Экспорт
	ДанныеПоДокументу = TK_ОбщегоНазначенияСервер.ПолучитьДанныеДокумента(СсылкаНаЗаказ);
	
	ШаблонСсылки = TK_ОбщегоНазначенияСервер.ПолучитьШаблонСсылки();
	
	СсылкаДляЗапуска = СтрШаблон(ШаблонСсылки,ДанныеПоДокументу.ВнешнийID);
	
	Возврат СсылкаДляЗапуска;
КонецФункции




Функция ПолучитьШаблонСсылки() Экспорт
	Возврат "https://teklifo.com/rfq/%1";
КонецФункции



Функция ПолучитьДанныеДокумента(СсылкаНаЗаказ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	TK_СоответствияДокументовЗапросаЦенПоставщикам.ВнешнийID,
	|	TK_СоответствияДокументовЗапросаЦенПоставщикам.number
	|ИЗ
	|	РегистрСведений.TK_СоответствияДокументовЗапросаЦенПоставщикам КАК TK_СоответствияДокументовЗапросаЦенПоставщикам
	|ГДЕ
	|	TK_СоответствияДокументовЗапросаЦенПоставщикам.ДокументЗапроса = &Ссылка" );
	Запрос.УстановитьПараметр("Ссылка",СсылкаНаЗаказ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	СтруктураДанных = Новый Структура("ВнешнийID,number");
	
	
    Если Выборка.Количество() > 0 Тогда
		 СтруктураДанных.ВнешнийID = Выборка.ВнешнийID;
		 СтруктураДанных.number = Выборка.number;
    КонецЕсли;
    
    
    Возврат СтруктураДанных;
	
КонецФункции



Функция ПолучитьДанныеДокументаЗапросаЦенОтКлиентаПоВнешнемуID(ВнешнийID="") Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	TK_СоответствияДокументовЗапросаЦенОтКлиентов.ВнешнийID,
	|	TK_СоответствияДокументовЗапросаЦенОтКлиентов.number,
	|	TK_СоответствияДокументовЗапросаЦенОтКлиентов.ДокументЗапроса
	|ИЗ
	|	РегистрСведений.TK_СоответствияДокументовЗапросаЦенОтКлиентов КАК TK_СоответствияДокументовЗапросаЦенОтКлиентов
	|ГДЕ
	|	TK_СоответствияДокументовЗапросаЦенОтКлиентов.ВнешнийID = &ВнешнийID" );
	Запрос.УстановитьПараметр("ВнешнийID",ВнешнийID);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	СтруктураДанных = Новый Структура("ВнешнийID,number,ДокументЗапроса");
	
	
    Если Выборка.Количество() > 0 Тогда
		 СтруктураДанных.ВнешнийID = Выборка.ВнешнийID;
		 СтруктураДанных.number = Выборка.number;
		 СтруктураДанных.ДокументЗапроса = Выборка.ДокументЗапроса;
    КонецЕсли;
    
    
    Возврат СтруктураДанных;
	
КонецФункции




Функция ПолучитьСтатусДокументаЗаказаЦенПоставщику(СсылкаНаЗаказ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	TK_СтатусыДокументовИнтеграцииСрезПоследних.СтатусДокумента
	|ИЗ
	|	РегистрСведений.TK_СтатусыДокументовИнтеграции.СрезПоследних(, Документ = &СсылкаНаЗаказ) КАК
	|		TK_СтатусыДокументовИнтеграцииСрезПоследних" );
	Запрос.УстановитьПараметр("СсылкаНаЗаказ", СсылкаНаЗаказ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.СтатусДокумента;
КонецФункции


Процедура УстановитьСтатусДокументаЗаказаЦенПоставщику(СсылкаНаЗаказ,Статус) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.TK_СтатусыДокументовИнтеграции.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	МенеджерЗаписи.Документ = СсылкаНаЗаказ;
	МенеджерЗаписи.СтатусДокумента = Статус;
	МенеджерЗаписи.Записать();
КонецПроцедуры

