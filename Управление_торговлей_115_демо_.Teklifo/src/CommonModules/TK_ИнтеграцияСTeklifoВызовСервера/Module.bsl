#Область ПрограммныйИнтерфейс

// Публикует запрос цен поставщикам на сервисе Teklifo.
// 
// Параметры:
//  ЗапросЦенПоставщикам - ДокументСсылка.TK_ЗапросЦенПоставщикам - запрос цен поставщикам
// 
// Возвращаемое значение:
//  Булево - результат публикации запроса цен поставщикам
Функция ОпубликоватьЗапросЦенПоставщикамНаTeklifo(ЗапросЦенПоставщикам) Экспорт

	Результат = Ложь;

	РеквизитыЗапросаЦенПоставщикам = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗапросЦенПоставщикам,
		"Организация, Товары");
	
	// 1. Инициализация обработки интеграции.
	ИнтеграцияСTeklifo = ИнициализироватьОбработкуИнтеграцииСTeklifo(РеквизитыЗапросаЦенПоставщикам.Организация);
	Если ИнтеграцияСTeklifo = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	// 2. Выгрузка номенклатуры документа.
	МассивНоменклатуры = РеквизитыЗапросаЦенПоставщикам.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	РезультатВыгрузкиНоменклатуры = ИнтеграцияСTeklifo.ВыгрузитьНоменклатуруНаTeklifo(МассивНоменклатуры);
	Если Не РезультатВыгрузкиНоменклатуры Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось выгрузить номенклатурные позиции на Teklifo.'"), ИнтеграцияСTeklifo.УчетнаяЗапись));
		Возврат Результат;
	КонецЕсли;

	// 3. Выгрузка непосредственного самого документа.
	Результат = ИнтеграцияСTeklifo.ОпубликоватьЗапросЦенПоставщикамНаTeklifo(ЗапросЦенПоставщикам);
	Если Не Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось выполнить публикацию документа %1.'"), ЗапросЦенПоставщикам));
		Возврат Результат;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Получить результат получения запроса цен.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация
//  URL - Строка - URL на запрос цен от клиента
// 
// Возвращаемое значение:
//  Булево - результат загрузка запроса цен от клиента
Функция ЗагрузитьЗапросЦенОтКлиентаПоURL(Организация, URL = "") Экспорт

	ЗапросЦенОтКлиента = Документы.TK_ЗапросЦенОтКлиента.ПустаяСсылка();

	// 1. Инициализация обработки интеграции.
	ИнтеграцияСTeklifo = ИнициализироватьОбработкуИнтеграцииСTeklifo(Организация);
	Если ИнтеграцияСTeklifo = Неопределено Тогда
		Возврат ЗапросЦенОтКлиента;
	КонецЕсли;
	
	// 2. Проверка существования запроса цен с указанным идентификатором.
	ИдентификаторЗапросаЦен = ИзвлечьИдентификаторИзURLЗапросаЦен(URL);
	Если Не ИнтеграцияСTeklifo.ПроверитьСуществованиеЗапросаЦенаПоИдентификатору(ИдентификаторЗапросаЦен) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Не удалось найти запрос цен по указанной ссылке. Пожалуйста, проверьте правильность введеного URL.'"),
			ИнтеграцияСTeklifo.УчетнаяЗапись);
		Возврат ЗапросЦенОтКлиента;
	КонецЕсли;
	
	// 3. Подтверждение участия организации в запросе цен.
	Если Не ИнтеграцияСTeklifo.ПодтвердитьУчастиеОрганизацииВЗапросеЦенОтКлиента(ИдентификаторЗапросаЦен) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Не удалось подтвердить участие указанной организации в данном запросе цен.'"),
			ИнтеграцияСTeklifo.УчетнаяЗапись);
		Возврат ЗапросЦенОтКлиента;
	КонецЕсли;
	
	// 4. Загрузка документа запроса цен от клиента.
	Возврат ИнтеграцияСTeklifo.ЗагрузитьЗапросЦенОтКлиента(ИдентификаторЗапросаЦен);

КонецФункции

// Публикует коммерческое предложение клиенту на сервисе Teklifo.
// 
// Параметры:
//  КоммерческоеПредложениеКлиенту - ДокументСсылка.TK_КоммерческоеПредложениеКлиенту - коммерческое предложение клиенту
// 
// Возвращаемое значение:
//  Булево - результат публикации коммерческого предложения клиенту
Функция ОпубликоватьКоммерческоеПредложениеКлиентуНаTeklifo(КоммерческоеПредложениеКлиенту) Экспорт

	Результат = Ложь;

	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КоммерческоеПредложениеКлиенту, "Организация");
	
	// 1. Инициализация обработки интеграции.
	ИнтеграцияСTeklifo = ИнициализироватьОбработкуИнтеграцииСTeklifo(Организация);
	Если ИнтеграцияСTeklifo = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	// 2. Выгрузка непосредственного самого документа.
	Результат = ИнтеграцияСTeklifo.ОпубликоватьКоммерческоеПредложениеКлиентуНаTeklifo(КоммерческоеПредложениеКлиенту);
	Если Не Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось отправить документ %1.'"), КоммерческоеПредложениеКлиенту));
		Возврат Результат;
	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьОбработкуИнтеграцииСTeklifo(Организация)

	ИнтеграцияСTeklifo = Обработки.TK_ИнтеграцияСTeklifo.Создать();
	ИнтеграцияСTeklifo.Организация = Организация;
	Если Не ИнтеграцияСTeklifo.ИнициализироватьПараметрыОбменаПоОрганизации() Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не определена учетная запись интеграции с Teklifo для организации %1.'"),
			ИнтеграцияСTeklifo.Организация));
		Возврат Неопределено;
	КонецЕсли;

	ИнтеграцияСTeklifo.ПолучитьCSRFТокен();

	Если Не ИнтеграцияСTeklifo.АвторизоватьПользователя() Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось пройти авторизацию для учетной записи %1. Проверьте правильность ввода логина и пароля.'"),
			ИнтеграцияСTeklifo.УчетнаяЗапись));
		Возврат Неопределено;
	КонецЕсли;

	Возврат ИнтеграцияСTeklifo;

КонецФункции

Функция ИзвлечьИдентификаторИзURLЗапросаЦен(Url)

	ПодстрокаПоиска = "rfq/";

	НомерСимвола = СтрНайти(Url, ПодстрокаПоиска);

	Если НомерСимвола <> 0 Тогда
		Возврат Сред(Url, НомерСимвола + СтрДлина(ПодстрокаПоиска));
	КонецЕсли;

	Возврат "";

КонецФункции

#КонецОбласти