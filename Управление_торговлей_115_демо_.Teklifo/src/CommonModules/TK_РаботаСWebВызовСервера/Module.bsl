#Область ПрограммныйИнтерфейс

// Публикует запрос цен поставщикам на сервисе Teklifo.
// 
// Параметры:
//  ЗапросЦенПоставщикам  - ДокументСсылка.TK_ЗапросЦенПоставщикам
// 
// Возвращаемое значение:
//  Булево - результат публикации запроса цен поставщикам
Функция ОпубликоватьЗапросЦенПоставщикамНаTeklifo(ЗапросЦенПоставщикам) Экспорт

	Результат = Ложь;

	РеквизитыЗапросаЦенПоставщикам = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗапросЦенПоставщикам,
		"Организация, Товары");
	
	// 1. Инициализация обработки интеграции.
	ИнтеграцияСTeklifo = Обработки.TK_ИнтеграцияСTeklifo.Создать();
	ИнтеграцияСTeklifo.Организация = РеквизитыЗапросаЦенПоставщикам.Организация;
	Если Не ИнтеграцияСTeklifo.ИнициализироватьПараметрыОбменаПоОрганизации() Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не определена учетная запись интеграции с Teklifo для организации %1.'"),
			ИнтеграцияСTeklifo.Организация));
		Возврат Результат;
	КонецЕсли;

	ИнтеграцияСTeklifo.ПолучитьCSRFТокен();

	Если Не ИнтеграцияСTeklifo.АвторизоватьПользователя() Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось пройти авторизацию для учетной записи %1. Проверьте правильность ввода логина и пароля.'"),
			ИнтеграцияСTeklifo.УчетнаяЗапись));
		Возврат Результат;
	КонецЕсли;

	// 2. Выгрузка номенклатуры документа.
	МассивНоменклатуры = РеквизитыЗапросаЦенПоставщикам.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	РезультатВыгрузкиНоменклатуры = ИнтеграцияСTeklifo.ВыгрузитьНоменклатуруНаTeklifo(МассивНоменклатуры);
	Если Не РезультатВыгрузкиНоменклатуры Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось выгрузить номенклатурные позиции на Teklifo.'"), ИнтеграцияСTeklifo.УчетнаяЗапись));
		Возврат Результат;
	КонецЕсли;

	// 2. Выгрузка непосредственного самого документа.
	Результат = ИнтеграцияСTeklifo.ОпубликоватьЗапросЦенПоставщикамНаTeklifo(ЗапросЦенПоставщикам);
	Если Не Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр(
			"ru = 'Не удалось выполнить публикацию документа %1.'"), ЗапросЦенПоставщикам));
		Возврат Результат;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Получить результат получения запроса цен.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация
//  Url - Строка - Url
// 
// Возвращаемое значение:
//  Структура - Получить результат получения запроса цен:
// * Загружен - Булево 
// * Сообщение - Строка
Функция ПолучитьРезультатПолученияЗапросаЦен(Организация, Url = "") Экспорт

	ДанныеПоОрганизации = "";

	ТокенСессии = "";

	ОтветЗагрузкиДанных = Новый Структура("Загружен, Сообщение", Ложь, "");

	IdЗаказа = ИзвлечьИдентификаторИзURLЗапросаЦен(Url);

	ОбработкаИнтеграции = Обработки.TK_ИнтеграцияСTeklifo.Создать();
	Результат = ОбработкаИнтеграции.ПолучитьРезультатДокументаЗапросЦенОтКлиента(IdЗаказа, ТокенСессии,
		ДанныеПоОрганизации.ОрганизацияНаСайте);

	Если Результат.Свойство("ИдентификаторВерсии") Тогда

		РезультатПодтверждения = ОбработкаИнтеграции.ПолучитьРезультатПодтвержденияУчастия(IdЗаказа, ТокенСессии,
			ДанныеПоОрганизации.ОрганизацияНаСайте);

		Если РезультатПодтверждения.Подтвержден Тогда
			Попытка
				НачатьТранзакцию();
				РезультатЗагрузки = TK_ЗагрузкаИСозданиеДанныхСервер.ЗагрузитьДокументЗапросЦенОтКлиента(Результат,
					Организация);
//				СохранитьИдентификаторДокументаНаTeklifo(РезультатЗагрузки.ДокЗапроса, РезультатЗагрузки);
				ЗафиксироватьТранзакцию();
				ОтветЗагрузкиДанных.Загружен = Истина;
				ОтветЗагрузкиДанных.Сообщение = Строка(РезультатЗагрузки.ДокЗапроса) + " успешно загружен.";
			Исключение
				ОтменитьТранзакцию();
				ОтветЗагрузкиДанных.Загружен = Ложь;
				ОтветЗагрузкиДанных.Сообщение = ОписаниеОшибки();
			КонецПопытки;
		Иначе
			ОтветЗагрузкиДанных.Загружен = Ложь;
			ОтветЗагрузкиДанных.Сообщение = РезультатПодтверждения.Сообщение;
		КонецЕсли;

	КонецЕсли;

	Возврат ОтветЗагрузкиДанных;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИзвлечьИдентификаторИзURLЗапросаЦен(Url)

	ПодстрокаПоиска = "rfq/";

	НомерСимвола = СтрНайти(Url, ПодстрокаПоиска);

	Если НомерСимвола <> 0 Тогда
		Возврат Сред(Url, НомерСимвола + СтрДлина(ПодстрокаПоиска));
	КонецЕсли;

	Возврат "";

КонецФункции

#КонецОбласти