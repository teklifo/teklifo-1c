Перем АдресСервера;

 
 // Выполнить авторизацию.
 // 
 // Параметры:
//  СтруктураТокенов-Структура - Структура Токенов:
// * csrfToken 
// * ТокенИзCookie 
 //  УжеЗарегистрирован - Булево - Уже зарегистрирован
Процедура ВыполнитьАвторизацию(СтруктураТокенов, УжеЗарегистрирован = Ложь) Экспорт
	СоединениеССервером = ПолучитьСоединение();//HTTPСоединение

	СтруктураТокенов =  ПолучитьТокены(СоединениеССервером);//Структура

	УжеЗарегистрирован =  ПользовательЗарегистрированВСистеме(СоединениеССервером);

КонецПроцедуры



// Зарегистрировать пользователя.
// 
// Параметры:
//  СтруктураТокенов-Структура - Структура Токенов:
// * csrfToken 
// * ТокенИзCookie 
Процедура ЗарегистрироватьПользователя(СтруктураТокенов) Экспорт
	СоединениеССервером = ПолучитьСоединение();//HTTPСоединение

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовки.Вставить("Cookie", "NEXT_LOCALE=ru;" + СтруктураТокенов.ТокенИзCookie);

	Ресурс = "api/auth/signin/email";

	ТелоЗапроса = СтрШаблон("csrfToken=%1&email=%2&json=true&redirect=false&callbakUrl=http://%3",
		СтруктураТокенов.csrfToken, СокрЛП(Email),АдресСервера);

	HTTPЗапрос = Новый HTTPЗапрос(Ресурс, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	Результат = СоединениеССервером.ВызватьHTTPМетод("POST", HTTPЗапрос);//HTTPОтвет
	Ответ = Результат.ПолучитьТелоКакСтроку();

	СтруктураДанных = TK_РаботаСWeb.ПолучитьДанныеИзJSON(Ответ);//Структура
КонецПроцедуры



// Получить токен сессии.
// 
// Параметры:
//  СтруктураТокенов-Структура - Структура Токенов:
// * csrfToken 
// * ТокенИзCookie 
// 
// Возвращаемое значение:
//  Строка - Получить токен сессии
Функция ПолучитьТокенСессии(СтруктураТокенов) Экспорт
	
	СоединениеССервером = ПолучитьСоединение();//HTTPСоединение

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовки.Вставить("Cookie", "NEXT_LOCALE=ru;" + СтруктураТокенов.ТокенИзCookie);

	Ресурс = "api/auth/callback/credentials";

	ТелоЗапроса = СтрШаблон("csrfToken=%1&email=%2&password=%3&json=true&redirect=false&callbakUrl=http://%4",
		СтруктураТокенов.csrfToken, СокрЛП(Email),СокрЛП(Пароль),АдресСервера);

	HTTPЗапрос = Новый HTTPЗапрос(Ресурс, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	Результат = СоединениеССервером.ВызватьHTTPМетод("POST", HTTPЗапрос);//HTTPОтвет
	Ответ = Результат.ПолучитьТелоКакСтроку();
  
    СтрокаКуки = Результат.Заголовки.Получить("set-cookie");

    НачальныйСимвол = СтрНайти(СтрокаКуки,"__Secure-next-auth.session-token=");
    
    ПерваяЧастьСтроки = Сред(СтрокаКуки,НачальныйСимвол+33 ,СтрДлина(СтрокаКуки) );
    
    КонечныйСимвол = СтрНайти(ПерваяЧастьСтроки,";");

    ПолученнаяСтрока = Сред(ПерваяЧастьСтроки,0,КонечныйСимвол-1);
    

	СтруктураДанных = TK_РаботаСWeb.ПолучитьДанныеИзJSON(Ответ);//Структура
	
	Если НачальныйСимвол = 0 Тогда
		ПолученнаяСтрока = "";
	КонецЕсли;
	
	
	Возврат ПолученнаяСтрока;
	
	
КонецФункции



// Пользователь зарегистрирован в системе.
// 
// Параметры:
//  СоединениеССервером - HTTPСоединение - Соединение с сервером
// 
// Возвращаемое значение:
//  Обещание - Пользователь зарегистрирован в системе
Функция ПользовательЗарегистрированВСистеме(СоединениеССервером)

	Заголовки = Новый Соответствие;

	Ресурс = "api/user";

	HTTPЗапрос = Новый HTTPЗапрос(Ресурс, Заголовки);
	HTTPЗапрос.АдресРесурса = Ресурс + "?email=" + СокрЛП(Email) + "&page=1&limit=10";
	Результат = СоединениеССервером.Получить(HTTPЗапрос);//HTTPОтвет
	Ответ = Результат.ПолучитьТелоКакСтроку();

	СтруктураДанных = TK_РаботаСWeb.ПолучитьДанныеИзJSON(Ответ);//Структура

	Если СтруктураДанных.Свойство("result") И СтруктураДанных.result.Количество() > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции




//Получить Токены.
// 
// Параметры:
//  СоединениеССервером - HTTPСоединение - Соединение с сервером
// 
// Возвращаемое значение:
//  Структура - Получитьcsrf token:
// * csrfToken 
// * ТокенИзCookie 
Функция ПолучитьТокены(СоединениеССервером)
	csrfToken = "";

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("csrfToken");
	СтруктураВозврата.Вставить("ТокенИзCookie");

	Заголовки = Новый Соответствие;

	HTTPЗапрос = Новый HTTPЗапрос("api/auth/csrf", Заголовки);
	Результат = СоединениеССервером.Получить(HTTPЗапрос);//HTTPОтвет
	Ответ = Результат.ПолучитьТелоКакСтроку();

	ТокенИзCookie = Результат.Заголовки.Получить("set-cookie");

	СтруктураДанных = TK_РаботаСWeb.ПолучитьДанныеИзJSON(Ответ);//Структура

	Если СтруктураДанных.Свойство("csrfToken") Тогда
		csrfToken = СтруктураДанных.csrfToken;
	КонецЕсли;

	СтруктураВозврата.csrfToken =  csrfToken;
	СтруктураВозврата.ТокенИзCookie = ТокенИзCookie;

	Возврат СтруктураВозврата;
КонецФункции


// Получить соединение.
// 
// Возвращаемое значение:
//  HTTPСоединение - Получить соединение
Функция ПолучитьСоединение()
	Возврат Новый HTTPСоединение(АдресСервера, , , , , , Новый ЗащищенноеСоединениеOpenSSL);
КонецФункции


АдресСервера = "teklifo.com";